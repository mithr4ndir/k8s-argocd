image:
  repository: lscr.io/linuxserver/nzbget
  tag: "latest"
  pullPolicy: IfNotPresent

imagePullSecrets:
  - name: ghcr-pull

service:
  main:
    annotations:
      metallb.universe.tf/allow-shared-ip: media-shared
    type: LoadBalancer
    loadBalancerIP: 192.168.1.226
    externalTrafficPolicy: Cluster
    ports:
      main:
        port: 10057         # external service port
        targetPort: http    # maps to containerPort name

persistence:
  config:
    enabled: true
    mountPath: "/config"
    storageClass: k8s-nfs
    size: 1Gi
  media:
    enabled: true
    existingClaim: "jellyfin-media"
    mountPath: "/downloads"
    subPath: downloads

# These must be TOP-LEVEL for this chart:
podSecurityContext:
  fsGroup: 1000
  fsGroupChangePolicy: "OnRootMismatch"

securityContext:
  runAsUser: 0
  runAsGroup: 0
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: false
  capabilities:
    drop: ["ALL"]

# Seed nzbget.conf without chown (NFS-safe)
workload:
  main:
    podSpec:
      containers:
        main:
          env:
            TZ: "America/Los_Angeles"
            PUID: "1000"
            PGID: "1000"
            UMASK: "002"
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -lc
                  - |
                    if [ ! -f /config/nzbget.conf ] && [ -w /config ]; then
                      cp -n /defaults/nzbget.conf /config/nzbget.conf 2>/dev/null || true
                      chmod 660 /config/nzbget.conf 2>/dev/null || true
                    else
                      chmod g+w /config/nzbget.conf 2>/dev/null || true
                    fi
          probes:
            startup:
              enabled: true
              custom: true
              spec:
                httpGet: { path: "/", port: 6789 }
                initialDelaySeconds: 10
                periodSeconds: 5
                failureThreshold: 60
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet: { path: "/", port: 6789 }
                initialDelaySeconds: 30
                periodSeconds: 10
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet: { path: "/", port: 6789 }
                initialDelaySeconds: 20
                periodSeconds: 5
