---
# Source: app-template/templates/common.yaml
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: prowlarr-config
  labels:
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prowlarr
    helm.sh/chart: app-template-3.5.1
spec:
  accessModes:
    - "ReadWriteMany"
  resources:
    requests:
      storage: "1Gi"
  storageClassName: "k8s-nfs"
---
# Source: app-template/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  labels:
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prowlarr
    app.kubernetes.io/service: prowlarr
    helm.sh/chart: app-template-3.5.1
  annotations:
    metallb.universe.tf/allow-shared-ip: media-shared
spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.1.226
  ports:
    - port: 9696
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/name: prowlarr
---
# Source: app-template/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  labels:
    app.kubernetes.io/component: main
    app.kubernetes.io/instance: prowlarr
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: prowlarr
    helm.sh/chart: app-template-3.5.1
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/component: main
      app.kubernetes.io/name: prowlarr
      app.kubernetes.io/instance: prowlarr
  template:
    metadata:
      labels: 
        app.kubernetes.io/component: main
        app.kubernetes.io/instance: prowlarr
        app.kubernetes.io/name: prowlarr
    spec: 
      enableServiceLinks: false
      serviceAccountName: default
      automountServiceAccountToken: true
      securityContext: 
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      hostIPC: false
      hostNetwork: false
      hostPID: false
      dnsPolicy: ClusterFirst
      containers: 
        - env:
          - name: PGID
            value: "1000"
          - name: PUID
            value: "1000"
          - name: TZ
            value: America/Los_Angeles
          - name: UMASK
            value: "002"
          image: lscr.io/linuxserver/prowlarr:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 9696
            initialDelaySeconds: 60
            periodSeconds: 10
          name: main
          ports:
          - containerPort: 9696
            name: http
          readinessProbe:
            httpGet:
              path: /
              port: 9696
            initialDelaySeconds: 30
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SETUID
              - SETGID
              - CHOWN
              drop:
              - ALL
            runAsGroup: 0
            runAsUser: 0
          startupProbe:
            failureThreshold: 120
            initialDelaySeconds: 10
            periodSeconds: 5
            tcpSocket:
              port: 9696
          volumeMounts:
          - mountPath: /config
            name: config
      volumes: 
        - name: config
          persistentVolumeClaim:
            claimName: prowlarr-config
